# Overrides-Sync Values - Production Configuration
# Use this file for deploying Overrides-Sync with production-ready settings

# Deployment configuration
replicaCount: 2  # Production: Multiple replicas for high availability

nameOverride: ""
fullnameOverride: ""

# Image configuration
image:
  repository: ghcr.io/akshaydubey29/overrides-sync
  tag: "latest-scientific-notation-fix-arm64"
  pullPolicy: IfNotPresent

# Service configuration
service:
  type: ClusterIP
  port: 9090  # Metrics port
  annotations: {}

# Resource configuration - Production
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

# Security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  capabilities:
    drop:
      - ALL

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532

# Pod annotations - Production
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/metrics"

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity - Production ready
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - overrides-sync
        topologyKey: kubernetes.io/hostname

# Service Account
serviceAccount:
  create: true
  annotations: {}

# RBAC configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["configmaps"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["events"]
      verbs: ["create", "patch"]

# Logging configuration - Production
log:
  level: "info"  # Production logging level
  format: "json"

# Controller configuration
mimir:
  namespace: "mimir"
  overridesConfigMap: "mimir-overrides"

rls:
  host: "mimir-rls.mimir-edge-enforcement.svc.cluster.local"
  adminPort: "8082"

# Polling configuration - Production optimized
pollFallbackSeconds: 5  # Production: 5s polling interval

# Environment variables - Production
env:
  - name: LOG_LEVEL
    value: "info"
  - name: METRICS_ENABLED
    value: "true"

# Liveness and readiness probes - Production
livenessProbe:
  httpGet:
    path: /healthz
    port: metrics
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /healthz
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe
startupProbe:
  httpGet:
    path: /healthz
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# Horizontal Pod Autoscaler
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

# Pod Disruption Budget
pdb:
  enabled: true
  minAvailable: 1

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true  # Enable ServiceMonitor for production monitoring
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}

# Image pull secrets
imagePullSecrets: []

# Network Policy - Production
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: monitoring
      ports:
      - protocol: TCP
        port: 9090
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            name: mimir
      ports:
      - protocol: TCP
        port: 443
    - to:
      - namespaceSelector:
          matchLabels:
            name: mimir-edge-enforcement
      ports:
      - protocol: TCP
        port: 8082
    - to: []  # Allow DNS resolution
      ports:
      - protocol: UDP
        port: 53

# Configuration - Production
config:
  # Real-time mode
  realTimeSync: true
  
  # Error reporting
  errorReporting: true
  
  # Logging
  detailedLogging: false  # Disable detailed logging for performance
  
  # Connection pooling
  connectionPooling: true
  
  # Sync settings - Production optimized
  sync:
    watchTimeout: "30s"          # Production timeout
    retryDelay: "5s"             # Production retry delay
    maxRetries: 5                # Production retry count
    batchSize: 50                # Production batch size
    parallelSync: true           # Enable parallel tenant sync
