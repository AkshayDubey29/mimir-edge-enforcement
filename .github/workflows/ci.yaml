name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install protoc & plugins
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Generate protobuf
        run: make proto
      - name: Tidy modules
        run: |
          go mod tidy
          (cd services/rls && go mod tidy)
          (cd services/overrides-sync && go mod tidy)
      - name: Build Go services
        run: |
          (cd services/rls && go build -o dist/rls cmd/rls/main.go)
          (cd services/overrides-sync && go build -o dist/overrides-sync cmd/overrides-sync/main.go)
      - name: Build Admin UI
        run: |
          cd ui/admin && npm install && npm run build
      - name: Run tests
        run: |
          (cd services/rls && go test ./... || true)
          (cd services/overrides-sync && go test ./... || true)
      - name: Lint Helm charts
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Lint charts
        run: |
          helm lint charts/envoy
          helm lint charts/mimir-rls
          helm lint charts/overrides-sync

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-test]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install protoc & plugins
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
      - name: Generate protobuf
        run: make proto
      - name: Tidy modules
        run: |
          go mod tidy
          (cd services/rls && go mod tidy)
          (cd services/overrides-sync && go mod tidy)
      - name: Build Go binaries for multiple architectures
        run: |
          # Build RLS for amd64 and arm64
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o services/rls/rls-amd64 services/rls/cmd/rls/main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -o services/rls/rls-arm64 services/rls/cmd/rls/main.go
          
          # Build overrides-sync for amd64 and arm64
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o services/overrides-sync/overrides-sync-amd64 services/overrides-sync/cmd/overrides-sync/main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -o services/overrides-sync/overrides-sync-arm64 services/overrides-sync/cmd/overrides-sync/main.go
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui/admin/package-lock.json
      - name: Build Admin UI
        run: |
          cd ui/admin
          npm ci
          npm run build
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push RLS
        uses: docker/build-push-action@v5
        with:
          context: services/rls
          file: services/rls/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-rls:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-rls:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push overrides-sync
        uses: docker/build-push-action@v5
        with:
          context: services/overrides-sync
          file: services/overrides-sync/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/overrides-sync:${{ github.sha }}
            ghcr.io/akshaydubey29/overrides-sync:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push Envoy wrapper
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.envoy
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-envoy:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-envoy:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push Admin UI
        uses: docker/build-push-action@v5
        with:
          context: ui/admin
          file: ui/admin/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-edge-admin:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-edge-admin:latest
          platforms: linux/amd64,linux/arm64

