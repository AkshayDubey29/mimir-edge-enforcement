name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Cache Go
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install protoc & plugins
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Generate protobuf
        run: |
          make proto
      - name: Tidy modules
        run: |
          go mod tidy || true
          (cd services/rls && go mod tidy || true)
          (cd services/overrides-sync && go mod tidy || true)
      - name: Build services
        run: |
          make rls || true
          make sync || true
      - name: Run tests
        run: |
          make test || true

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Lint charts
        run: |
          helm lint charts/envoy || true
          helm lint charts/mimir-rls || true
          helm lint charts/overrides-sync || true

  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push RLS
        uses: docker/build-push-action@v5
        with:
          context: services/rls
          file: services/rls/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-rls:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-rls:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push overrides-sync
        uses: docker/build-push-action@v5
        with:
          context: services/overrides-sync
          file: services/overrides-sync/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/overrides-sync:${{ github.sha }}
            ghcr.io/akshaydubey29/overrides-sync:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push Envoy wrapper
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.envoy
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-envoy:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-envoy:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push Admin UI
        uses: docker/build-push-action@v5
        with:
          context: ui/admin
          file: ui/admin/Dockerfile
          push: true
          tags: |
            ghcr.io/akshaydubey29/mimir-edge-admin:${{ github.sha }}
            ghcr.io/akshaydubey29/mimir-edge-admin:latest
          platforms: linux/amd64,linux/arm64

  helm-oci-publish:
    runs-on: ubuntu-latest
    needs: [helm-lint]
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Package charts
        run: |
          mkdir -p charts/pkg
          helm package charts/envoy -d charts/pkg
          helm package charts/mimir-rls -d charts/pkg
          helm package charts/overrides-sync -d charts/pkg
      - name: Push charts to GHCR (OCI)
        run: |
          shopt -s nullglob
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          for c in charts/pkg/*.tgz; do
            name=$(basename "$c" .tgz)
            helm push "$c" oci://ghcr.io/${OWNER}/charts
          done

