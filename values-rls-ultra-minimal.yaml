# Ultra-minimal RLS configuration for resource-constrained kind cluster
# This configuration uses extremely low resources to ensure pods can start

# Selective filtering configuration - LENIENT
selectiveFiltering:
  enabled: true  # Enable selective filtering
  fallbackToDeny: true  # Fall back to deny if filtering fails
  seriesSelectionStrategy: "random"  # Strategy: random, oldest, newest, priority
  metricPriority:  # Priority order for metrics (higher priority = dropped last)
    - "critical_metrics"
    - "important_metrics" 
    - "standard_metrics"
  maxFilteringPercentage: 100  # Allow filtering up to 100% of excess
  minSeriesToKeep: 1  # Always keep at least 1 series

# Ultra-minimal resource configuration
replicaCount: 1  # Only 1 replica for testing

resources:
  limits:
    cpu: 200m    # Ultra-minimal CPU limit
    memory: 128Mi  # Ultra-minimal memory limit
  requests:
    cpu: 50m     # Ultra-minimal CPU request
    memory: 32Mi   # Ultra-minimal memory request

# Store configuration - Use memory for testing
store:
  backend: "memory"  # Use memory store for testing

# Redis configuration - Disable for testing
redis:
  enabled: false  # Disable Redis for minimal setup

# Server configuration
server:
  enableExtAuthz: false  # Disable ext-authz server
  enableRateLimit: true  # Enable rate limit server
  enableAdmin: true      # Enable admin server (HTTP endpoint)
  enableMetrics: true    # Enable metrics server

# Limits configuration - Very strict limits for testing
limits:
  defaultSamplesPerSecond: 100     # Very low limit for testing
  defaultBurstPercent: 50
  enforceBodyParsing: true
  maxBodyBytes: 524288             # 512KB limit
  maxRequestBytes: "524288"        # 512KB limit
  failureModeAllow: false          # Fail closed for security
  defaultMaxLabelsPerSeries: 5     # Very low limit for testing
  defaultMaxLabelValueLength: 50   # Very low limit for testing
  defaultMaxSeriesPerRequest: 100  # Very low limit for testing

# Enforcement configuration - Enable all enforcement
enforcement:
  enabled: true
  enforceMaxSeriesPerRequest: true
  enforceMaxSeriesPerMetric: true  # Fixed: Added this line
  enforceMaxLabelsPerSeries: true
  enforceSamplesPerSecond: true
  enforceBytesPerSecond: true
  enforceMaxBodyBytes: true

# Health check configuration - Very lenient
healthCheck:
  livenessProbe:
    httpGet:
      path: /healthz
      port: admin
    initialDelaySeconds: 120
    periodSeconds: 120
    timeoutSeconds: 30
    failureThreshold: 10
  readinessProbe:
    httpGet:
      path: /readyz
      port: admin
    initialDelaySeconds: 120
    periodSeconds: 120
    timeoutSeconds: 30
    failureThreshold: 10

# Logging configuration
log:
  level: "warn"  # Reduce logging for performance

# Mimir configuration
mimir:
  host: "mimir-distributor.mimir.svc.cluster.local"
  port: "8080"

# Tenant configuration
tenantHeader: "X-Scope-OrgID"
newTenantLeniency: false  # Disable leniency for strict testing
